[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-sandbox"
version = "0.1.0"
description = "Autonomous world simulation with emergent tribal societies and AI behaviors"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Games/Entertainment :: Simulation",
]
dependencies = [
    "noise",
    "tqdm",
    "matplotlib",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[project.scripts]
ai-sandbox = "main:main"

[project.urls]
Homepage = "https://github.com/yourusername/ai-sandbox"
Repository = "https://github.com/yourusername/ai-sandbox.git"
Issues = "https://github.com/yourusername/ai-sandbox/issues"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "noise.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = [
    "ANN201",  # Missing return type annotation for public function
]

[tool.flake8]
max-line-length = 100
